<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:treeEditor="clr-namespace:QPP.Wpf.UI.TreeEditor">

    <!--<ContextMenu x:Key="DesignerItemContextMenu">
        <MenuItem Header="Cut" Command="{x:Static ApplicationCommands.Cut}">
            <MenuItem.Icon>
                <Image Source="Images/Cut.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Copy" Command="{x:Static ApplicationCommands.Copy}">
            <MenuItem.Icon>
                <Image Source="Images/Copy.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Paste" Command="{x:Static ApplicationCommands.Paste}">
            <MenuItem.Icon>
                <Image Source="Images/Paste.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Delete" Command="{x:Static ApplicationCommands.Delete}">
            <MenuItem.Icon>
                <Image Source="Images/Delete.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Grouping">
            <MenuItem Header="Group" Command="{x:Static s:DesignerCanvas.Group}">
                <MenuItem.Icon>
                    <Image Source="Images/Group.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Ungroup" Command="{x:Static s:DesignerCanvas.Ungroup}">
                <MenuItem.Icon>
                    <Image Source="Images/Ungroup.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Order">
            <MenuItem Header="Bring Forward" Command="{x:Static s:DesignerCanvas.BringForward}">
                <MenuItem.Icon>
                    <Image Source="Images/BringForward.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Bring To Front" Command="{x:Static s:DesignerCanvas.BringToFront}">
                <MenuItem.Icon>
                    <Image Source="Images/BringToFront.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Send Backward" Command="{x:Static s:DesignerCanvas.SendBackward}">
                <MenuItem.Icon>
                    <Image Source="Images/SendBackward.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Send To Back" Command="{x:Static s:DesignerCanvas.SendToBack}">
                <MenuItem.Icon>
                    <Image Source="Images/SendToBack.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
    </ContextMenu>-->

    <!-- Connector Style -->
    <Style TargetType="{x:Type treeEditor:Connector}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Cursor" Value="Cross"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Visibility" Value="Hidden"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treeEditor:Connector}">
                    <Grid>
                        <!-- transparent extra space makes connector easier to hit -->
                        <Rectangle Fill="Transparent" Margin="-2"/>
                        <Rectangle Fill="Lavender" StrokeThickness="1" Stroke="Gray"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ConnectorDecoratorTemplate Default Template -->
    <!--<ControlTemplate x:Key="ConnectorDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid Margin="-5">
            <s:Connector x:Name="Left" Orientation="Left" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <s:Connector x:Name="Top" Orientation="Top" VerticalAlignment="Top" HorizontalAlignment="Center"/>
            <s:Connector x:Name="Right" Orientation="Right" VerticalAlignment="Center" HorizontalAlignment="Right"/>
            <s:Connector x:Name="Bottom" Orientation="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
        </Grid>
    </ControlTemplate>-->
    <ControlTemplate x:Key="ConnectorDecoratorTemplate" TargetType="{x:Type Control}">
        <treeEditor:RelativePositionPanel Margin="-5">
            <treeEditor:Connector x:Name="Top" Orientation="Top" treeEditor:RelativePositionPanel.RelativePosition="0.1,0"/>
            <treeEditor:Connector x:Name="Left" Orientation="Left" treeEditor:RelativePositionPanel.RelativePosition="0,0.5"/>
            <treeEditor:Connector x:Name="Right" Orientation="Right" treeEditor:RelativePositionPanel.RelativePosition="1,0.5"/>
            <!--<treeEditor:Connector x:Name="Bottom" Orientation="Bottom" treeEditor:RelativePositionPanel.RelativePosition="0.1,1"/>-->
            <treeEditor:Connector x:Name="Bottom" Orientation="Bottom" treeEditor:RelativePositionPanel.RelativePosition="0,1"/>
        </treeEditor:RelativePositionPanel>
    </ControlTemplate>


    <!--Simple SliderThumb - The Thumb is the draggable part of a Slider-->

    <Style TargetType="{x:Type treeEditor:ResizeThumb}">
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
    </Style>

    <!-- ResizeDecorator Default Template -->
    <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid Opacity="0.7" SnapsToDevicePixels="true">
            <treeEditor:ResizeThumb Height="1" Cursor="SizeNS" Margin="0 -1 0 0" Visibility="Hidden"
                     VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
            <treeEditor:ResizeThumb Width="1" Cursor="SizeWE" Margin="-1 0 0 0" Visibility="Hidden"
                     VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
            <treeEditor:ResizeThumb Width="16" Cursor="SizeWE" Margin="0 0 0 0" Visibility="Visible"
                     VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
            <treeEditor:ResizeThumb Height="1" Cursor="SizeNS" Margin="0 0 0 -1" Visibility="Hidden"
                     VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
            <treeEditor:ResizeThumb Width="4" Height="4" Cursor="SizeNWSE" Margin="-2 -2 0 0" Visibility="Hidden"
                     VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <treeEditor:ResizeThumb Width="4" Height="4" Cursor="SizeNESW" Margin="0 -2 -2 0" Visibility="Hidden"
                     VerticalAlignment="Top" HorizontalAlignment="Right"/>
            <treeEditor:ResizeThumb Width="4" Height="4" Cursor="SizeNESW" Margin="-2 0 0 -2" Visibility="Hidden"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
            <treeEditor:ResizeThumb Width="4" Height="4" Cursor="SizeNWSE" Margin="0 0 -2 -2" Visibility="Hidden"
                     VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
        </Grid>
    </ControlTemplate>

    <!-- DragThumb Default Template -->
    <Style TargetType="{x:Type treeEditor:DragThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treeEditor:DragThumb}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--定义按钮样式-->
    <Style x:Key="ButtonTemplate" TargetType="ToggleButton" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">

                    <Grid>
                        <Ellipse x:Name="outerCircle" 
                                 Width="14" Height="14" Fill="Snow" Stroke="LightGray"/>
                        <!--<Border>-->
                        <TextBlock
                                x:Name="content" 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" 
                                Text="{TemplateBinding  Content}"
                                Foreground="Gray"
                                FontSize="10">
                        </TextBlock>
                        <!--</Border>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="ToggleButton.Content" Value="-"></Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Setter Property="ToggleButton.Content" Value="+"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- DesignerItem Style -->
    <Style TargetType="{x:Type treeEditor:DesignerItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treeEditor:DesignerItem}">
                    <!--<Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          ContextMenu="{StaticResource DesignerItemContextMenu}">-->
                    <Grid x:Name="Grid"
                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="4"></RowDefinition>
                        </Grid.RowDefinitions>
                        <ContentControl  Grid.Row="0" x:Name="TextContent" Focusable="False">
                            <Border x:Name="Border" IsHitTestVisible="True"
                                 BorderBrush="Transparent" BorderThickness="2" Background="Transparent" Focusable="False"  >
                                <Grid Margin="0" Name="ContentGrid">
                                    <!-- PART_ResizeDecorator -->
                                    <Control Grid.Row="0"  x:Name="PART_ResizeDecorator" 
                                 Visibility="Collapsed"
                                 Template="{StaticResource ResizeDecoratorTemplate}" Focusable="False"/>
                                    <!-- PART_DragThumb -->
                                    <!--<treeEditor:DragThumb Grid.Row="0" x:Name="PART_DragThumb" 
                                     Cursor="SizeAll"/>-->
                                    <!-- PART_ContentPresenter -->
                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          Margin="{TemplateBinding ContentControl.Padding}"
                                                      Focusable="False"/>
                                    <!-- PART_ConnectorDecorator -->
                                    <Control Grid.Row="0"  x:Name="PART_ConnectorDecorator"
                                 Visibility="Hidden" Focusable="False"
                                 Template="{StaticResource ConnectorDecoratorTemplate}"/>
                                </Grid>
                            </Border>
                        </ContentControl>


                        <treeEditor:RelativePositionPanel  Grid.Row="1"  x:Name="PART_IsExpanderVisible"  Margin="-6,0,0,0">
                            <ToggleButton
                                x:Name="PART_ToggleButton" 
                                treeEditor:RelativePositionPanel.RelativePosition="0,1"
                                Style="{StaticResource ButtonTemplate}" 
                                IsChecked="{Binding IsExpanded}"
                                Focusable="False"/>
                        </treeEditor:RelativePositionPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=IsSelected}" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="DeepSkyBlue"/>
                            <Setter TargetName="Border" Property="Background" Value="LightSkyBlue"/>
                        </DataTrigger>-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=IsNewParent}" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="OrangeRed"/>
                            <Setter TargetName="Border" Property="Background" Value="GhostWhite"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=IsShadow}" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="DeepSkyBlue"></Setter>
                            <Setter TargetName="Border" Property="Background" Value="LightSkyBlue"></Setter>
                        </DataTrigger>-->
                        <!--<DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsGroup}">
                            <Setter TargetName="PART_DragThumb" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>-->
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=IsDragItemChild}" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightGray"/>
                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                            <Setter TargetName="PART_ContentPresenter" Property="TextBlock.Foreground" Value="Gray"/>
                        </DataTrigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsSelected}"/>
                                <Condition Value="{x:Static sys:Guid.Empty}" Binding="{Binding RelativeSource={RelativeSource Self},Path=ParentID}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ResizeDecorator" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsDragConnectionOver}">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsGroup}">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsExpanderVisible}">
                            <Setter TargetName="PART_IsExpanderVisible" Property="Visibility" Value="Hidden"></Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>