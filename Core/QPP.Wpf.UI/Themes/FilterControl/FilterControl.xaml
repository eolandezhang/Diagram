<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:form="clr-namespace:QPP.Wpf.UI.Controls.Form"
    xmlns:range="clr-namespace:QPP.Wpf.UI.Controls.Range"
    xmlns:toolkit="clr-namespace:QPP.Wpf.UI.Controls.Toolkit"
    xmlns:filter="clr-namespace:QPP.Wpf.UI.Controls.FilterControl">
    <Style TargetType="filter:FilterControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="filter:FilterControl">
                    <ControlTemplate.Resources>
                        <filter:FilterDataTemplate x:Key="textBox" TypeName="TextBox">
                            <TextBox Text="{Binding Value}"/>
                        </filter:FilterDataTemplate>
                        <filter:FilterDataTemplate x:Key="datePicker"  TypeName="DatePicker">
                            <DatePicker SelectedDate="{Binding Value}"/>
                        </filter:FilterDataTemplate>
                        <filter:FilterDataTemplate x:Key="stringRangePanel" TypeName="StringRangePanel">
                            <range:RangePanel Value="{Binding Scope}">
                                <range:RangePanel.From>
                                    <TextBox Text="{Binding From}"/>
                                </range:RangePanel.From>
                                <range:RangePanel.To>
                                    <TextBox Text="{Binding To}"/>
                                </range:RangePanel.To>
                            </range:RangePanel>
                        </filter:FilterDataTemplate>
                        <filter:FilterDataTemplate x:Key="datePickerRangePanel" TypeName="DatePickerRangePanel">
                            <range:RangePanel Value="{Binding Scope}">
                                <range:RangePanel.From>
                                    <DatePicker MinWidth="80" SelectedDate="{Binding From}"/>
                                </range:RangePanel.From>
                                <range:RangePanel.To>
                                    <DatePicker MinWidth="80" SelectedDate="{Binding To}"/>
                                </range:RangePanel.To>
                            </range:RangePanel>
                        </filter:FilterDataTemplate>
                        <filter:FilterDataTemplate x:Key="numericUpDown"  TypeName="NumericUpDown">
                            <toolkit:NumericUpDown MinHeight="23" Height="23"  Value="{Binding Value}"/>
                        </filter:FilterDataTemplate>
                        <filter:FilterDataTemplate x:Key="numericUpDownRangePanel" TypeName="NumericUpDownRangePanel">
                            <range:RangePanel Value="{Binding Scope}">
                                <range:RangePanel.From>
                                    <toolkit:NumericUpDown MinWidth="80" Value="{Binding From}"/>
                                </range:RangePanel.From>
                                <range:RangePanel.To>
                                    <toolkit:NumericUpDown MinWidth="80" Value="{Binding To}"/>
                                </range:RangePanel.To>
                            </range:RangePanel>
                        </filter:FilterDataTemplate>
                    </ControlTemplate.Resources>
                    <Border Name="filterControl_Border" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0.5" >
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="0,0,0,5"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding HorizontalOffset}" />
                                        <ColumnDefinition MinWidth="300"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Horizontal" Grid.Column="1" x:Name="filterFormView">
                                        <ComboBox SelectedIndex="0" MinWidth="80"  DisplayMemberPath="Text" SelectedValuePath="Value" ItemsSource="{Binding FieldNameCollection, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=filter:FilterControl,AncestorLevel=1}}" SelectedValue="{Binding FieldName}" Margin="0,1,5,1"/>
                                        <ComboBox x:Name="stringActionCombobox" MinWidth="80" ItemsSource="{Binding StringActionCollection, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=filter:FilterControl,AncestorLevel=1}}" SelectedValue="{Binding Action}" DisplayMemberPath="Name" SelectedValuePath="Value" Margin="0,1,5,1"/>
                                        <ComboBox x:Name="booleanActionCombobox" MinWidth="80" ItemsSource="{Binding BooleanActionCollection, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=filter:FilterControl,AncestorLevel=1}}" SelectedValue="{Binding Action}" DisplayMemberPath="Name" SelectedValuePath="Value" Margin="0,1,5,1"/>
                                        <ComboBox x:Name="numericOrDateTimeActionCombobox" MinWidth="80" ItemsSource="{Binding NumericOrDateTimeActionCollection, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=filter:FilterControl,AncestorLevel=1}}" SelectedValue="{Binding Action}" DisplayMemberPath="Name" SelectedValuePath="Value" Margin="0,1,5,1"/>
                                        <filter:FilterValueControl MinWidth="200" x:Name="filterValueItem" Content="{Binding Path=.}" ValueContent="{Binding Path=.}" FilterContentTplSelector="{Binding Path=FilterContentTemplateSelector, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=filter:FilterControl,AncestorLevel=1}}" Margin="0,1,5,1">
                                        </filter:FilterValueControl>
                                        <Button VerticalAlignment="Center" Name="delete" ToolTip="移除条件" Command="{Binding RemoveComand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=filter:FilterControl,AncestorLevel=1}}" CommandParameter="{Binding}">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Grid Height="11" Width="11" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                        <Image Name="img" Opacity=".6" Source="/QPP.Wpf.UI;component/Themes/Generic/Images/delete.png"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="img" Property="Opacity" Value="1"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </StackPanel>

                                    <!--组项-->
                                    <StackPanel Orientation="Horizontal" Grid.Column="1" x:Name="rowFormView" Margin="0,5,0,0">
                                        <ComboBox ItemsSource="{Binding RelationCollection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=filter:FilterControl, AncestorLevel=1}}" SelectedValue="{Binding ChildrenRelation}" SelectedIndex="0" form:FormView.Label="关系" Width="60" Margin="0,0,5,2"/>
                                        <StackPanel Orientation="Horizontal">
                                            <Button ToolTip="添加组" MinHeight="20" Command="{Binding AddRowComand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=filter:FilterControl, AncestorLevel=1}}" CommandParameter="{Binding}">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Grid Height="16" Width="16" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <Image Name="img" Opacity=".6" Source="/QPP.Wpf.UI;component/Themes/Generic/Images/AddGroup.png"></Image>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="img" Property="Opacity" Value="1"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <TextBlock Width="5"></TextBlock>
                                            <Button MinHeight="20" ToolTip="添加条件" Command="{Binding AddComand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=filter:FilterControl, AncestorLevel=1}}" CommandParameter="{Binding}">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Grid Height="16" Width="16" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <Image Name="img" Opacity=".6" Source="/QPP.Wpf.UI;component/Themes/Generic/Images/AddCondition.png"></Image>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="img" Property="Opacity" Value="1"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <TextBlock Width="5"></TextBlock>
                                            <Button ToolTip="清空子项" MinHeight="20" Command="{Binding RemoveChildrenComand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=filter:FilterControl, AncestorLevel=1}}" CommandParameter="{Binding}">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Grid Height="16" Width="16" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <Image Name="img" Opacity=".6" Source="/QPP.Wpf.UI;component/Themes/Generic/Images/ClearAll.png"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="img" Property="Opacity" Value="1"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <TextBlock Width="5"></TextBlock>
                                            <Button  x:Name="removeGroup" MinHeight="20" ToolTip="移除组" Command="{Binding RemoveGroupComand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=filter:FilterControl, AncestorLevel=1}}" CommandParameter="{Binding}">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Grid Height="11" Width="11" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <Image Name="img" Opacity=".6" Source="/QPP.Wpf.UI;component/Themes/Generic/Images/delete.png"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="img" Property="Opacity" Value="1"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <!--显示组项还是显示条件项-->
                                    <DataTrigger Binding="{Binding Path=IsGroup}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="filterFormView"/>
                                        <Setter Property="Visibility" Value="Visible"  TargetName="rowFormView"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsGroup}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"  TargetName="filterFormView"/>
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="rowFormView"/>
                                    </DataTrigger>
                                    <!--不显示控件filterValueItem-->
                                    <DataTrigger Binding="{Binding Path=Action}" Value="IsNull">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="filterValueItem"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Action}" Value="NotNull">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="filterValueItem"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Path=Action}" Value="IsTrue">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="filterValueItem"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Action}" Value="IsFalse">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="filterValueItem"/>
                                    </DataTrigger>
                                    <!--几个操作下拉框的显示切换-->
                                    <DataTrigger Binding="{Binding Path=IsString}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="numericOrDateTimeActionCombobox"/>
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="booleanActionCombobox"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsDateTimeOrNumericType}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="booleanActionCombobox"/>
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="stringActionCombobox"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsBoolType}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="stringActionCombobox"/>
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="numericOrDateTimeActionCombobox"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Parent}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"  TargetName="removeGroup"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>