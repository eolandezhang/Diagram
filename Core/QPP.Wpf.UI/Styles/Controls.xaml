<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:QPP.Wpf.UI.Controls"
                    xmlns:Gantt="clr-namespace:QPP.Wpf.UI.Controls.Gantt"
                    xmlns:XGantt="clr-namespace:QPP.Wpf.UI.Controls.XGantt"
                    xmlns:Metro="clr-namespace:QPP.Wpf.UI.Controls.Metro">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.ListView.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.Scrollbars.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.Buttons.xaml" />

        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.Calendar.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.ContextMenu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.DatePicker.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.DataGrid.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.GroupBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.PasswordBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.ProgressBar.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.Slider.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.TabControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.Label.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.Tooltip.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.ToolBar.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/Controls.TreeView.xaml" />
        <ResourceDictionary Source="pack://application:,,,/QPP.Wpf.UI;component/Styles/GroupBoxStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{DynamicResource ValidationBrush1}" CornerRadius="5" Margin="4,4,-4,-4" />
            <Border Background="{DynamicResource ValidationBrush2}" CornerRadius="4" Margin="3,3,-3,-3" />
            <Border Background="{DynamicResource ValidationBrush3}" CornerRadius="3" Margin="2,2,-2,-2" />
            <Border Background="{DynamicResource ValidationBrush4}" CornerRadius="2" Margin="1,1,-1,-1" />
            <Border Background="{DynamicResource ValidationBrush5}" CornerRadius="2" /> 
            <Border CornerRadius="2">
                <TextBlock Foreground="{DynamicResource WhiteColorBrush}"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ToggleButton" x:Key="HeaderMaximizeToggleButton">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames 
                                            BeginTime="00:00:00" 
                                            Storyboard.TargetName="rectangle" 
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" 
                                                            Value="0.6"/>
                                            <SplineDoubleKeyFrame 
                                                KeyTime="00:00:00.2000000" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Duration="00:00:00.0010000"
                                            Storyboard.TargetName="rectangle"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame
                                                KeyTime="00:00:00"
                                                Value="0.15"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames 
                                            BeginTime="00:00:00"
                                            Duration="00:00:00.0010000"
                                            Storyboard.TargetName="checkedArrow" 
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame
                                            KeyTime="00:00:00"
                                            Value=".6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames 
                                            BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="uncheckedArrow" 
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame 
                                                KeyTime="00:00:00"
                                                Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard/>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid 
                            Height="Auto" 
                            Width="Auto" 
                            Name="grid" 
                            Margin="1.5">
                            <Border 
                                Margin="0,0,0,0"
                                BorderThickness="1,1,1,1"  >
                                <Grid>
                                    <Path 
                                        HorizontalAlignment="Right" 
                                        SnapsToDevicePixels="True"
                                        Margin="0,2,2,5.5" 
                                        x:Name="uncheckedArrow" 
                                        VerticalAlignment="Stretch" 
                                        Width="6.752"
                                        Opacity=".6"
                                        Stretch="Fill"
                                        StrokeThickness="1.5"
                                        Stroke="{TemplateBinding Foreground}" 
                                        Data="M0.5,1 L6,1 M6,6 L6,0.5 M6,1 L0.5,6" />
                                    <Path 
                                        HorizontalAlignment="Stretch" 
                                        SnapsToDevicePixels="True"
                                        Margin="3,5,5,2" 
                                        x:Name="checkedArrow" 
                                        VerticalAlignment="Stretch"
                                        Stretch="Fill"
                                        StrokeThickness="1.5"
                                        Stroke="{TemplateBinding Foreground}"
                                        Data="M0.5,1 L6,1 M6,6 L6,0.5 M6,1 L0.5,6"
                                        Opacity="0"
                                        RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>
                            <Rectangle
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="0.5"
                                SnapsToDevicePixels="True"
                                Margin="1,1,1,1"
                                x:Name="rectangle"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="IsMouseOver"
                            Value="True">
                            <Setter Property="Opacity" Value="1"></Setter>
                            <Setter 
                                TargetName="grid"
                                Property="Background"
                                Value="{DynamicResource SemiTransparentWhiteBrush}" />
                        </Trigger>
                        <Trigger 
                            Property="IsMouseOver"
                            Value="False">
                            <Setter
                                TargetName="rectangle"
                                Property="Opacity"
                                Value=".5" />
                        </Trigger>
                        <Trigger 
                            Property="IsPressed"
                            Value="True">
                            <Setter 
                                TargetName="grid"
                                Property="Background"
                                Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger 
                            Property="IsEnabled"
                            Value="false">
                            <Setter 
                                Property="Foreground"
                                Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroToggleSwitch" TargetType="{x:Type Metro:ToggleSwitch}" BasedOn="{StaticResource {x:Type Metro:ToggleSwitch}}" />

    <Style TargetType="ToolTip" BasedOn="{StaticResource MetroToolTip}" />
    <Style TargetType="Button" BasedOn="{StaticResource MetroButton}" />
    <Style TargetType="ToggleButton" BasedOn="{StaticResource MetroToggleButton}" />
    <Style TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}" />
    <Style TargetType="Slider" BasedOn="{StaticResource MetroSlider}" />
    <Style TargetType="TextBlock" BasedOn="{StaticResource MetroTextBlock}" />
    <Style TargetType="Label" BasedOn="{StaticResource MetroLabel}" />
    <Style TargetType="TabItem" BasedOn="{StaticResource MetroTabItem}"  />
    <Style TargetType="TabControl" BasedOn="{StaticResource MetroTabControl}" />
    <Style TargetType="ScrollBar" BasedOn="{StaticResource MetroScrollBar}" />
    <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}" />
    <Style TargetType="ProgressBar" BasedOn="{StaticResource MetroProgressBar}" />
    <Style TargetType="PasswordBox" BasedOn="{StaticResource MetroPasswordBox}" />
    <Style TargetType="CheckBox" BasedOn="{StaticResource MetroCheckBox}" />
    <Style TargetType="ComboBox" BasedOn="{StaticResource MetroComboBox}" />
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MetroComboBoxItem}" />
    <Style TargetType="Separator" BasedOn="{StaticResource MetroSeparator}" />
    <Style TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}" />
    <Style TargetType="Menu" BasedOn="{StaticResource StandardMenu}" />
    <Style TargetType="ContextMenu" BasedOn="{StaticResource MetroContextMenu}" />
    <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}" />
    <Style TargetType="ListBox" BasedOn="{StaticResource MetroListBox}" />
    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MetroListBoxItem}" />
    <Style TargetType="ListView" BasedOn="{StaticResource MetroListView}" />
    <Style TargetType="ListViewItem" BasedOn="{StaticResource MetroListViewItem}" />
    <Style TargetType="DatePicker" BasedOn="{StaticResource MetroDatePicker}"/>
    <Style TargetType="DatePickerTextBox" BasedOn="{StaticResource MetroDatePickerTextBox}"/>
    <Style TargetType="Calendar" BasedOn="{StaticResource MetroCalendar}" />
    <Style TargetType="DataGrid" BasedOn="{StaticResource MetroDataGrid}" />
    <Style TargetType="Gantt:GanttDataGrid" BasedOn="{StaticResource MetroDataGrid}" />
    <Style TargetType="XGantt:GanttDataGrid" BasedOn="{StaticResource MetroDataGrid}" />
   
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter 
                            x:Name="PART_ScrollContentPresenter" 
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False" 
                            CanVerticallyScroll="False" 
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}" 
                            Grid.Column="0" 
                            Margin="{TemplateBinding Padding}"
                            Grid.Row="0"/>
                        <ScrollBar 
                            x:Name="PART_VerticalScrollBar"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Grid.Column="1"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            Grid.Row="0"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar 
                            x:Name="PART_HorizontalScrollBar"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Grid.Column="0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>